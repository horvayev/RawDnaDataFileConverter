using System;
using System.IO;
using System.Threading.Tasks;

namespace DnaFormatConverter
{
    public class TwentyThreeAndMeV5Writer : IFormatWriter
    {
        private readonly static string SEPARATOR = "\t";
        private readonly static string HEADER_TEMPLATE = $@"# This data file generated by DnaFormatConverter at: {{0}}
# Below is a text version of your data.  Fields are TAB-separated
# Each line corresponds to a single SNP.
# FILE GENERATED FROM {{1}} USING RAWDNADATAFORMATCONVERTER.
# rsid{SEPARATOR}chromosome{SEPARATOR}position{SEPARATOR}genotype";
        private StreamWriter _streamWriter;
        private FileFormat _sourceFormat;

        public TwentyThreeAndMeV5Writer(StreamWriter streamWriter, FileFormat sourceFormat)
        {
            if (streamWriter == null) throw new ArgumentNullException(nameof(streamWriter));
            _streamWriter = streamWriter;
            _sourceFormat = sourceFormat;
        }

        public async Task Begin()
        {
            string dateTimeString = DateTime.UtcNow.ToString("ddd MMM dd HH:mm:ss yyyy");
            await _streamWriter.WriteLineAsync(string.Format(HEADER_TEMPLATE, dateTimeString, _sourceFormat.ToFriendlyString()));
        }

        public async Task End()
        {
            if (_streamWriter != null)
            {
                await _streamWriter.WriteLineAsync();
                await _streamWriter.FlushAsync();
            }
        }

        public async Task WriteNext(SNP genotype)
        {
            if (genotype == null)
            {
                return;
            }

            string line = SerializeGenotype(genotype);
            await _streamWriter.WriteLineAsync(line);
        }

        public async Task WriteAllAsync(IFormatReader reader)
        {
            while (!reader.EndOfFile)
            {
                SNP genotype = await reader.ReadNext();
                await WriteNext(genotype);
            }
        }

        private string SerializeGenotype(SNP genotype)
        {
            return $"{genotype.Rsid}\t{genotype.Chromosome}\t{genotype.Position}\t{genotype.Result}";
        }
    }
}